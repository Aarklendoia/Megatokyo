name: .NET Core UWP

on:
  push:
    tags: "v*"

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: Megatokyo.sln
      Test_Project_Path: Megatokyo.Server.UnitTest\Megatokyo.Server.UnitTest.csproj
      UWP_Project_Path: Megatokyo.csproj
      UWP_Project_Directory: .\

    steps:
      - name: Configure PageFile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 32GB
          maximum-size: 32GB
          disk-root: "C:"

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

      - name: Extract version from tag
        uses: Amadevus/pwsh-script@v1
        id: getVersion
        with:
          script: '("${{steps.tag.outputs.tag}}").Split("v")[1]'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.0

      - name: Execute unit tests
        run: dotnet test

      - name: Update manifest version
        run: |
          [xml]$manifest = get-content ".\$env:UWP_Project_Directory\Package.appxmanifest"
          $manifest.Package.Identity.version = "${{steps.getVersion.outputs.result}}"
          $manifest.Save(".\$env:UWP_Project_Directory\Package.appxmanifest")

      - name: Decode the pfx
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
          $currentDirectory = Get-Location
          $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:UWP_Project_Directory -AssitionalChildPath $env:SigningCertificate
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - name: Build the sideload solution
        run: msbuild $env:Solution_Path /p:Plateform=x86 /p:AppxBundle=$env:Appx_Bundle /p:AppxBundlePlatforms="x86|x64" /p:AppxPackageDir=C:\DeployOutput /p:PackageCertificateKeyFile=$env:SigningCertificate /restore
        env:
          Appx_Bundle: Always
          BuildMode: StoreUpload
          Configuration: Release

      - name: Remove the pfx
        run: Remove-Item -path $env:UWP_Project_Directory\$env:SigningCertificate

      - name: Create archive
        run: Compress-Archive -Path C:\DeployOutput\* -DestinationPath C:\DeployOutput\StorePackage_${{steps.getVersion.outputs.result}}.zip

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Alpha ${{steps.getVersion.outputs.result}}
          draft: false
          prerelease: true

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          namupload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: C:\DeployOutput\StorePackage_${{steps.getVersion.outputs.result}}.zip
          asset_name: StorePackage_${{steps.getVersion.outputs.result}}.zip
          asset_content-type: application/zip
